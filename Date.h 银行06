// Date.h

#ifndef _DATE_H
#define _DATE_H
#include<iostream>
class Date {
private:
	int m_year = 0;
	int m_month = 0;
	int m_day = 0;

public:
	Date(int year, int month, int day) :m_year(year), m_month(month), m_day(day) {}  //构造函数
	int getDay() const { return m_day; }
	int getMonth() const { return m_month; }
	int getYear() const { return m_year; }
	int timeOfGap(Date lastdate) const;	//计算时间间隔
	bool isLeapYear() const { return m_year % 400 == 0 || (m_year % 4 == 0 && m_year % 100 != 0); }    //	判断是否为闰年
	void showTime() const { std::cout << m_year << "-" << m_month << "-" << m_day; }	//显示当时时间
	int getMaxDay() const;

	Date() {};
	friend std::ostream& operator<<(std::ostream& os, const Date& date);
	bool operator<(const Date& other) const;
	bool operator==(const Date& other) const;
	static Date parseDate(const std::string& dateStr);		//解析时间串
	static Date read();

};

std::ostream& operator<<(std::ostream& os, const Date& date);

#endif
